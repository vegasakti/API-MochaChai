{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-14T16:41:40.961Z",
    "end": "2023-05-14T16:41:42.592Z",
    "duration": 1631,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7c5c6352-d857-4d69-82d7-1338818448f0",
      "title": "",
      "fullFile": "E:\\QA\\Automation\\NEST\\API\\batch9\\test\\scenario\\get.booking.id.test.js",
      "file": "\\test\\scenario\\get.booking.id.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2196e25-556c-4153-939e-2b67ef238042",
          "title": "As a User, I want to get booking id",
          "fullFile": "E:\\QA\\Automation\\NEST\\API\\batch9\\test\\scenario\\get.booking.id.test.js",
          "file": "\\test\\scenario\\get.booking.id.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sucesfully get booking id when insert a valid data",
              "fullTitle": "As a User, I want to get booking id should sucesfully get booking id when insert a valid data",
              "timedOut": false,
              "duration": 1625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await herokuApi.getBookingId();\nassert.equal(response.status, 200);\nconsole.log(response.data)\nassert.jsonSchema(response.data, shcema.BOOKINGID_SCHEMA);",
              "err": {},
              "uuid": "7b41a5b9-dcb4-49fd-b6f7-5d0760ca9b21",
              "parentUUID": "a2196e25-556c-4153-939e-2b67ef238042",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b41a5b9-dcb4-49fd-b6f7-5d0760ca9b21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1625,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}